generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String     @id @default(cuid())
  name        String
  email       String     @unique
  password    String
  phoneNumber String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  bookings    Booking[]
  feedback    Feedback[]
}

model Vehicle {
  id           String      @id @default(cuid())
  name         String
  type         VehicleType
  categoryId   String
  category     Category    @relation(fields: [categoryId], references: [id])
  licensePlate String?     @unique
  rentPerDay   Float
  isAvailable  Boolean     @default(true)
  description  String?
  imageUrl     String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  bookings     Booking[]
  Feedback     Feedback[]
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  vehicles    Vehicle[]
}

model Booking {
  id          String        @id @default(cuid())
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  vehicleId   String
  vehicle     Vehicle       @relation(fields: [vehicleId], references: [id])
  startDate   DateTime
  endDate     DateTime
  totalAmount Float
  status      BookingStatus @default(PENDING)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  payment     Payment?
}

model Payment {
  id            String        @id @default(cuid())
  bookingId     String        @unique
  booking       Booking       @relation(fields: [bookingId], references: [id])
  amount        Float
  paymentMethod PaymentMethod
  status        PaymentStatus @default(PENDING)
  createdAt     DateTime      @default(now())
}

model Feedback {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  vehicleId String
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  comment   String?
  rating    Int      @default(0) // e.g., 0-5 stars
  createdAt DateTime @default(now())
}

enum VehicleType {
  MOTORBIKE
  CAR
  VAN
  TRUCK
  SUV
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum PaymentMethod {
  CASH
  CREDIT_CARD
  PAYPAL
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}
