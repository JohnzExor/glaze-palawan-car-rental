generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String     @id @default(cuid())
  firstName   String
  lastName    String
  email       String     @unique
  password    String
  phoneNumber String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  bookings    Booking[]
  feedback    Feedback[]
}

model Vehicle {
  id              String           @id @default(cuid())
  name            String
  type            VehicleType
  licensePlate    String?
  rentPerDay      String?
  isAvailable     Boolean          @default(true)
  description     String?
  attachments     String[]
  maxFuelCapacity String? // Maximum fuel capacity in liters
  transmission    TransmissionType // Manual or Automatic
  seatingCapacity String // Number of people that can fit in the car
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  colors          String?
  bookings        Booking[]
  feedback        Feedback[]
}

enum TransmissionType {
  MANUAL
  AUTOMATIC
}

model Booking {
  id           String        @id @default(cuid())
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  vehicleId    String
  vehicle      Vehicle       @relation(fields: [vehicleId], references: [id])
  vehicleColor String?
  startDate    DateTime
  endDate      DateTime
  totalAmount  String
  status       BookingStatus @default(PENDING)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  payment      Payment?
}

model Payment {
  id            String        @id @default(cuid())
  bookingId     String        @unique
  booking       Booking       @relation(fields: [bookingId], references: [id])
  amount        String
  paymentMethod PaymentMethod
  status        PaymentStatus @default(PENDING)
  createdAt     DateTime      @default(now())
}

model Feedback {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  vehicleId String
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  comment   String?
  rating    Int      @default(0) // e.g., 0-5 stars
  createdAt DateTime @default(now())
}

enum VehicleType {
  CAR
  SUV
  VAN
  MOTORCYCLE
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum PaymentMethod {
  CASH
  CREDIT_CARD
  PAYPAL
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}
